27a28,32
> from nav_msgs.msg import (
>     OccupancyGrid,
>     MapMetaData,
> )
> 
58a64,66
>         self._mapPub = rospy.Publisher("/map", OccupancyGrid, latch=True)
>         self._aprilTagsPub = rospy.Publisher("/aprilTagPoses", PoseArray, latch=True)
>         self._estimatedPosePub = rospy.Publisher("/estimatedPose", Pose)
60a69,98
> 
>     def publishMap(self,world_map,occupancy_map,resolution):
>         self._mapPub.publish(self._occupancyGridFor(occupancy_map,resolution))
>         self._aprilTagsPub.publish(self._poseArrayFor(world_map));
> 
>     def publishEstimatedPose(self,x,y,theta):
>         self._estimatedPosePub.publish(self._pose(x,y,theta))
> 
>     def _pose(self,x,y,theta):
>          p = Pose()
>          p.position.x = x
>          p.position.y = y
>          p.orientation.z = theta
>          return p
> 
>     def _poseArrayFor(self,world_map):
>         def convertTagToPose(tag):
>             return self._pose(tag[0], tag[1], tag[2])
> 
>         result = PoseArray()
>         result.poses = map(convertTagToPose,world_map.tolist())
>         return result
> 
>     def _occupancyGridFor(self,occupancy_map,resolution):
>         result = OccupancyGrid()
>         result.info.height = occupancy_map.shape[0]
>         result.info.width  = occupancy_map.shape[1]
>         result.info.resolution = resolution
>         result.data = occupancy_map.flatten() * 100
>         return result
